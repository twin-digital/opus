syncRules:
  - name: package-files
    conditions:
      - exists: src/*
    applyActions:
      - action: json-patch
        file: package.json
        options:
          patch: |
            - opx: appendIfMissing
              path: /files
              value: dist
            - opx: appendIfMissing
              path: /files
              value: "!dist/**/*.d.ts.map"
    unapplyActions:
      - action: json-patch
        file: package.json
        options:
          patch: |
            - opx: removeValue
              path: /files
              value: dist
            - opx: removeValue
              path: /files
              value: '!dist/**/*.d.ts.map'
  - name: package-exports
    conditions:
      - exists: src/**/index.ts
    applyActions:
      - action: json-merge-patch
        file: package.json
        options:
          patch: |
            exports:
              .:
                import: ./dist/index.js
                types: ./dist/index.d.ts
              ./*:
                import: ./dist/*/index.js
                types: ./dist/*/index.d.ts
    unapplyActions:
      - action: json-merge-patch
        file: package.json
        options:
          patch: |
            exports:
              .: null
              ./*: null
  - name: eslint
    applyActions:
      - action: write-file
        file: eslint.config.js
        options:
          content: |
            import base from '@twin-digital/eslint-config'

            export default base

      - action: json-merge-patch
        file: package.json
        options:
          patch: |
            scripts:
              lint: eslint --no-error-on-unmatched-pattern src
              lint:fix: eslint --no-error-on-unmatched-pattern --fix src && prettier --write --ignore-path ../../../.gitignore .
            devDependencies:
              '@eslint/js': 'catalog:'
              '@twin-digital/eslint-config': workspace:*
              eslint: 'catalog:'
              eslint-config-prettier: 'catalog:'
              globals: 'catalog:'
              prettier: 'catalog:'
              typescript-eslint: 'catalog:'
  - name: typescript
    applyActions:
      - action: write-file
        file: tsconfig.json
        options:
          content: |
            {
              "extends": ["@twin-digital/tsconfig/tsconfig.build.json"]
            }

      - action: json-merge-patch
        file: package.json
        options:
          patch: |
            scripts:
              build:typescript: tsc
              typecheck: tsc --noEmit
              watch:typescript: tsc --watch
            devDependencies:
              typescript: 'catalog:'
              '@types/node': '22.x'
  - name: typescript-with-options
    conditions:
      - exists: tsconfig.options.json
    applyActions:
      - action: write-file
        file: tsconfig.json
        options:
          content: |
            {
              "extends": ["@twin-digital/tsconfig/tsconfig.build.json", "./tsconfig.options.json"]
            }
